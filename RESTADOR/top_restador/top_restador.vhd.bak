library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity top_restador is
    port(
        clk50mhz   : in  std_logic;
        reset      : in  std_logic;
        confirmar  : in  std_logic;
        -- Entradas simuladas de la FPGA
        saldo_in   : in  integer range 0 to 9999; -- saldo ingresado (ej: viene del top_ingreso_dinero)
        precio     : in  integer range 0 to 9999; -- precio del producto (ej: viene del top_productos)
        -- Salidas FPGA
        disp0, disp1 : out std_logic_vector(6 downto 0); -- displays (2 dígitos para el saldo restante)
        led_ok     : out std_logic;  -- LED compra exitosa
        led_err    : out std_logic   -- LED saldo insuficiente
    );
end top_restador;

architecture arch of top_restador is

    -- COMPONENTES
    component div_50millones
        port(
            clk  : in  std_logic;
            out1 : buffer std_logic
        );
    end component;

    component restador_saldo
        port(
            clk        : in  std_logic;
            reset      : in  std_logic;
            confirmar  : in  std_logic;
            saldo_in   : in  integer range 0 to 9999;
            precio     : in  integer range 0 to 9999;
            saldo_out  : out integer range 0 to 9999;
            compra_ok  : out std_logic;
            sin_saldo  : out std_logic
        );
    end component;

    component bin_bcd
        port(
            bin : in integer range 0 to 9999;
            d0  : out std_logic_vector(3 downto 0);
            d1  : out std_logic_vector(3 downto 0);
            d2  : out std_logic_vector(3 downto 0);
            d3  : out std_logic_vector(3 downto 0)
        );
    end component;

    component systemd
        port(
            A  : in  std_logic_vector(3 downto 0);
            D0 : out std_logic_vector(6 downto 0)
        );
    end component;

    -- SEÑALES INTERNAS
    signal clk_lento : std_logic := '0';
    signal saldo_restante : integer range 0 to 9999 := 0;
    signal dig0, dig1, dig2, dig3 : std_logic_vector(3 downto 0);

begin

    -- Divisor de reloj
    U1: div_50millones port map(
        clk  => clk50mhz,
        out1 => clk_lento
    );

    -- Restador de saldo
    U2: restador_saldo port map(
        clk        => clk_lento,
        reset      => reset,
        confirmar  => confirmar,
        saldo_in   => saldo_in,
        precio     => precio,
        saldo_out  => saldo_restante,
        compra_ok  => led_ok,
        sin_saldo  => led_err
    );

    -- Conversor binario a BCD
    U3: bin_bcd port map(
        bin => saldo_restante,
        d0  => dig0,
        d1  => dig1,
        d2  => dig2,
        d3  => dig3
    );

    -- Mostrar solo 2 dígitos (disp0 = unidades, disp1 = decenas)
    U4: systemd port map(A => dig0, D0 => disp0);
    U5: systemd port map(A => dig1, D0 => disp1);

end arch;
